version: '3'

networks:
    simplestack:
      driver: bridge
    zookeeper:
      driver: bridge
    kafka:
      driver: bridge

volumes:
    radar-backend-monitor-disconnect-data: {}

services:

    #---------------------------------------------------------------------------#
    # Zookeeper Cluster                                                         #
    #---------------------------------------------------------------------------#
    zookeeper-1:
      image: confluentinc/cp-zookeeper:3.2.1-5
      networks:
        - zookeeper
      environment:
        ZOOKEEPER_SERVER_ID: 1
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
        ZOOKEEPER_INIT_LIMIT: 5
        ZOOKEEPER_SYNC_LIMIT: 2
        ZOOKEEPER_SERVERS: zookeeper-1:2888:3888

    #---------------------------------------------------------------------------#
    # Kafka Cluster                                                             #
    #---------------------------------------------------------------------------#
    kafka-1:
      image: confluentinc/cp-kafka:3.2.1-5
      networks:
        - kafka
        - zookeeper
      depends_on:
        - zookeeper-1
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

    kafka-2:
      image: confluentinc/cp-kafka:3.2.1-5
      networks:
        - kafka
        - zookeeper
      depends_on:
        - kafka-1
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

    kafka-3:
      image: confluentinc/cp-kafka:3.2.1-5
      networks:
        - kafka
        - zookeeper
      depends_on:
        - kafka-2
      environment:
        KAFKA_BROKER_ID: 3
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:9092
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

    #---------------------------------------------------------------------------#
    # Schema Registry                                                           #
    #---------------------------------------------------------------------------#
    schema-registry-1:
      image: confluentinc/cp-schema-registry:3.2.1-5
      networks:
        - kafka
        - zookeeper
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
      restart: always
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper-1:2181
        SCHEMA_REGISTRY_HOST_NAME: schema-registry-1
        SCHEMA_REGISTRY_LISTENERS: http://schema-registry-1:8081

    #---------------------------------------------------------------------------#
    # REST proxy                                                                #
    #---------------------------------------------------------------------------#
    rest-proxy-1:
      image: confluentinc/cp-kafka-rest:3.2.1-5
      networks:
        - kafka
        - zookeeper
      depends_on:
        - kafka-1
        - kafka-2
        - kafka-3
        - schema-registry-1
      ports:
        - "8082:8082"
      environment:
        KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper-1:2181
        KAFKA_REST_LISTENERS: http://rest-proxy-1:8082
        KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry-1:8081
        KAFKA_REST_HOST_NAME: rest-proxy-1

    #---------------------------------------------------------------------------#
    # Kafka Init                                                                #
    #---------------------------------------------------------------------------#
    kafka-init:
      build: images/kafka-radarinit
      image: radarcns/kafka-init
      networks:
        - kafka
        - zookeeper
      depends_on:
        - zookeeper-1
        - kafka-1
        - kafka-2
        - kafka-3
        - schema-registry-1
      environment:
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
        KAFKA_REST_PROXY: http://rest-proxy-1:8082
        KAFKA_BROKERS: 3
        RADAR_PARTITIONS: 3
        RADAR_REPLICATION_FACTOR: 3


    #---------------------------------------------------------------------------#
    # RADAR backend streams                                                     #
    #---------------------------------------------------------------------------#
    radar-backend-stream:
      image: radarbase/radar-backend:0.2.1
      command:
        - stream
      networks:
        - zookeeper
        - kafka
        - default
      depends_on:
        - zookeeper-1
        - kafka-1
        - kafka-2
        - kafka-3
        - schema-registry-1
        - kafka-init
      volumes:
        - ./volumes/radar/etc/radar.yml:/etc/radar.yml
      restart: always
      environment:
        KAFKA_REST_PROXY: http://rest-proxy-1:8082
        KAFKA_SCHEMA_REGISTRY: http://schema-registry-1:8081
        KAFKA_BROKERS: 3

    #---------------------------------------------------------------------------#
    # RADAR backend monitor                                                     #
    #---------------------------------------------------------------------------#
    radar-backend-monitor:
      image: radarbase/radar-backend:0.2.1
      command: monitor
      networks:
        - zookeeper
        - kafka
      depends_on:
        - zookeeper-1
        - kafka-1
        - kafka-2
        - kafka-3
        - schema-registry-1
        - kafka-init
      volumes:
        - ./volumes/radar/etc/radar.yml:/etc/radar.yml
        - radar-backend-monitor-disconnect-data:/var/lib/radar/data
      restart: always
      environment:
        KAFKA_REST_PROXY: http://rest-proxy-1:8082
        KAFKA_SCHEMA_REGISTRY: http://schema-registry-1:8081
        KAFKA_BROKERS: 3
        # For backwards compatibility
        TOPIC_LIST: "application_record_counts"

    #---------------------------------------------------------------------------#
    # RADAR mongo connector                                                     #
    #---------------------------------------------------------------------------#
    radar-mongodb-connector:
      image: radarbase/kafka-connect-mongodb-sink:0.2.0
      restart: on-failure
      volumes:
        - ./volumes/radar/etc/sink-mongo.properties:/etc/kafka-connect/sink.properties
      networks:
        - zookeeper
        - kafka
        - simplestack
      depends_on:
        - zookeeper-1
        - kafka-1
        - kafka-2
        - kafka-3
        - schema-registry-1
        - rest-proxy-1
        - kafka-init
        - hotstorage
      environment:
        CONNECT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-1:9092,PLAINTEXT://kafka-2:9092,PLAINTEXT://kafka-3:9092
        CONNECT_REST_PORT: 8083
        CONNECT_GROUP_ID: "default"
        CONNECT_CONFIG_STORAGE_TOPIC: "default.config"
        CONNECT_OFFSET_STORAGE_TOPIC: "default.offsets"
        CONNECT_STATUS_STORAGE_TOPIC: "default.status"
        CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
        CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
        CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry-1:8081"
        CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry-1:8081"
        CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
        CONNECT_OFFSET_STORAGE_FILE_FILENAME: "/tmp/connect2.offset"
        CONNECT_REST_ADVERTISED_HOST_NAME: "radar-mongodb-connector"
        CONNECT_ZOOKEEPER_CONNECT: zookeeper-1:2181
        CONNECT_CONSUMER_MAX_POLL_RECORDS: 500
        CONNECT_CONSUMER_MAX_POLL_INTERVAL_MS: 300000
        CONNECT_CONSUMER_SESSION_TIMEOUT_MS: 10000
        CONNECT_CONSUMER_HEARTBEAT_INTERVAL_MS: 3000
        KAFKA_BROKERS: 3
        KAFKA_REST_PROXY: http://rest-proxy-1:8082
        TOPIC_LIST: ${RADAR_AGG_TOPIC_LIST}

    #----------------------------------------#
    #            RADAR Hot Storage           #
    #----------------------------------------#
    hotstorage:
      image: radarcns/radar-hotstorage:0.1
      ports:
        - "27017:27017"
        - "28017:28017"
      networks:
        - simplestack
      environment:
        RADAR_USER: restapi
        RADAR_PWD: radar
        RADAR_DB: hotstorage

    #----------------------------------------#
    #             RADAR Rest Api             #
    #----------------------------------------#
    rest-api:
      image: radarcns/radar-restapi:dev
      depends_on:
        - hotstorage
        - managementportal-app
      networks:
        - simplestack
        - default
      ports:
        - "8080:8080"
      volumes:
        - "./volumes/radar:/usr/local/tomcat/conf/radar"

    #---------------------------------------------------------------------------#
    # Management Portal                                                         #
    #---------------------------------------------------------------------------#
    managementportal-app:
      image: radarbase/management-portal:0.3.4
      networks:
        - default
        - simplestack
      environment:
        SERVER_PORT : 8090
        SPRING_PROFILES_ACTIVE: dev,swagger
        MANAGEMENTPORTAL_FRONTEND_CLIENT_SECRET: my-secret
        MANAGEMENTPORTAL_OAUTH_CLIENTS_FILE: /mp-includes/config/oauth_client_details.csv
        MANAGEMENTPORTAL_CATALOGUE_SERVER_ENABLE_AUTO_IMPORT: "false"
        MANAGEMENTPORTAL_CATALOGUE_SERVER_SERVER_URL: http://catalog-server:9010/source-types
        JHIPSTER_SLEEP: 10 # gives time for the database to boot before the application
        JAVA_OPTS: -Xmx256m  # maximum heap size for the JVM running ManagementPortal, increase this as necessary
      volumes:
        - ./volumes/radar/:/mp-includes/
      ports:
        - "8090:8090"
      healthcheck:
        test: ["CMD", "wget", "--spider", "localhost:8090/oauth/token_key"]
        interval: 1m30s
        timeout: 5s
        retries: 3

    #---------------------------------------------------------------------------#
    # Catalog server from radar-schemas                                         #
    #---------------------------------------------------------------------------#
    catalog-server:
      build: images/kafka-radarinit
      image: radarcns/kafka-init
      networks:
        - simplestack
      command: radar-schemas-tools serve /schema/merged
      environment:
        KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
        KAFKA_SCHEMA_REGISTRY: http://schema-registry-1:8081
        KAFKA_NUM_BROKERS: 3
        RADAR_NUM_PARTITIONS: 3
        RADAR_NUM_REPLICATION_FACTOR: 3
      healthcheck:
          test: ["CMD", "curl", "-f", "localhost:9010/source-types"]
          interval: 1m30s
          timeout: 5s